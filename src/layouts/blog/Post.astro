---
import type { MarkdownHeading } from "astro";
import type { CollectionEntry } from "astro:content";

import TOC from "@/components/toc";

import BaseLayout from "../BaseLayout.astro";

interface Props {
  data: CollectionEntry<"blog">["data"];
  headings: MarkdownHeading[];
}

const props = Astro.props;
---

<BaseLayout>
  <div class="flex">
    <div class="ml-1/3 w-1/3">
      <h1 class="text-3xl font-bold line-height-loose">{props.data.title}</h1>
      <div class="flex items-center gap-x-1.5">
        <span>{props.data.pubDate}</span>
        <span class="w-2">Â·</span>
        {
          props.data.authors &&
            props.data.authors.map((author) => (
              <a
                class="group inline-flex items-center text-current gap-x-1.5"
                href={author.link || "#"}
                target="_blank"
              >
                {author.image && (
                  <img
                    class="inline-block size-4 rounded-full"
                    src={author.image}
                    alt={`author-${author.name}-avatar`}
                    loading="lazy"
                  />
                )}
                <span class="group-hover:underline">{author.name}</span>
              </a>
            ))
        }
      </div>
      {
        props.data.tags && (
          <div class="flex items-center gap-x-1.5">
            {props.data.tags.map((tag) => (
              // TODO: replace href with tag summary page link, e.g. `/tags/${tag}`
              <a class="text-sm hover:underline" href="#">
                #{tag}
              </a>
            ))}
          </div>
        )
      }
      <article class="prose max-w-full">
        <slot />
      </article>
    </div>
    <TOC headings={props.headings} client:load />
  </div>
</BaseLayout>
