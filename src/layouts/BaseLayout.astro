---
import "@/assets/global.css";

import { theme } from "@/config";

import BaseFooter from "@/components/BaseFooter.astro";
import BaseHead from "@/components/BaseHead.astro";
import NavBar from "@/components/NavBar.astro";
import { cn } from "@/utils";

const { navbar } = theme;

interface Props {
  title?: string;
  article?: boolean;
}

const { title, article } = Astro.props;
---

<!doctype html>
<html lang="zh-CN" class="h-full">
  <head>
    <BaseHead title={title} />
    <script is:inline>
      // load page-width configuration
      (function () {
        try {
          const stored = localStorage.getItem("page-width");
          const width = stored ? stored : "1280px";
          document.documentElement.style.setProperty("--page-width", width);
        } catch (e) {
          console.error(e);
          document.documentElement.style.setProperty("--page-width", "1280px");
        }
      })();
    </script>
    <script is:inline>
      // load theme configuration
      (function () {
        // "theme" LocalStorage value is set by the package to remember user preference.
        // The value is checked and applied before rendering anything.
        const storedTheme = localStorage.getItem("theme");
        if (storedTheme && storedTheme !== "system") {
          document.documentElement.setAttribute("data-theme", storedTheme);
        } else {
          // If the theme is not set, the system default theme will be used.
          const mq = window.matchMedia("(prefers-color-scheme: dark)");
          if (mq.matches) {
            document.documentElement.setAttribute("data-theme", "dark");
          }
          mq.addEventListener("change", (e) => {
            if (!localStorage.getItem("theme") || localStorage.getItem("theme") === "system") {
              document.documentElement.setAttribute("data-theme", e.matches ? "dark" : "light");
            }
          });
        }
      })();
    </script>
  </head>
  <body>
    <NavBar items={navbar.items} article={article} />
    <div class="min-h-screen w-full">
      <div
        class={cn(
          "mx-auto flex duration-500",
          article ? "max-w-[var(--page-width,1280px)]" : "max-w-[1280px]",
        )}
      >
        {/* left sidebar — used for global document index or navigation across pages */}
        {/* ⚠️ do not remove this aside: it defines the base grid and keeps layout alignment */}
        <aside class="hidden w-40 lg:block lg:shrink-0">
          <slot name="aside" />
        </aside>

        {
          /* main content area — responsive and centered, adapts between article and general content */
        }
        <main class=`max-w-6xl w-full break-words min-w-0 pb-8`>
          {
            article ? (
              // article mode — use prose style for markdown-like content
              <article class="prose w-full max-w-6xl min-w-0 px-6 pt-4 md:px-12">
                <slot />
              </article>
            ) : (
              // normal mode — plain container without prose styling
              <div class="w-full max-w-6xl min-w-0 px-6 pt-4 md:px-12">
                <slot />
              </div>
            )
          }
        </main>

        {/* right sidebar — used for table of contents (TOC) within the current article */}
        {/* ⚠️ do not remove this aside: maintains symmetrical spacing and TOC placement */}
        <aside class="hidden w-40 lg:block lg:shrink-0">
          <slot name="nav" />
        </aside>
      </div>
    </div>
    <BaseFooter />
  </body>
</html>
